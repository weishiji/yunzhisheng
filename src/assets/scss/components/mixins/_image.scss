// Image Mixins
// - Responsive image
// - Retina image


// Responsive image
//
// Keep images from scaling beyond the width of their parents.
@mixin img-responsive($display: block) {
  display: $display;
  width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}


// Retina image
//
// Short retina mixin for setting background-image and -size. Note that the
// spelling of `min--moz-device-pixel-ratio` is intentional.
@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path("#{$file-1x}"), "#{$file-1x}"));

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path("#{$file-2x}"), "#{$file-2x}"));
    background-size: $width-1x $height-1x;
  }
}
// Image Grayscale for the Masses
@mixin grayscale( $toggle: "on", $percentage: 1 ) {
  $svg-type: "matrix";
  $svg-value: "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0";
  $ie-alpha: alpha(#{"opacity="}round( $percentage * 100 ) );

  @if $percentage != 1 {
    $svg-type: "saturate";
    $svg-value: $percentage;
  }

  @if $toggle == "on" {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'#{$svg-type}\' values=\'#{$svg-value}\'/></filter></svg>#grayscale"); // Firefox 10+, Firefox on Android
    filter: gray $ie-alpha; // IE6-9
    -webkit-filter: grayscale( round( $percentage * 100% ) ); // Chrome 19+, Safari 6+, Safari 6+ iOS
    filter: grayscale( round( $percentage * 100% ) ); // Catch-all
  }

  @if $toggle == "off" {
    @if $svg-type == "saturate" {
      filter: none;
    } @else {
      filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    }
    -webkit-filter: grayscale(0%);
    filter: grayscale(0);
  }
}

//图片的高度自适应
@mixin image-height($scale:1.33,$width:100%){
  width: $width;
  padding-bottom: $width * $scale;
  position: relative;
  overflow: hidden;
  background: url("/static/image/loading.gif") no-repeat center;
  background-size: 30px;
  a.img-item-link{
    display: block;
    @include overlay();
    z-index:1;
  }
  & img{
    height: auto;
    @include overlay();
    z-index: 1;
    background-color: #FFF;
    margin: 0 auto;
  }
}